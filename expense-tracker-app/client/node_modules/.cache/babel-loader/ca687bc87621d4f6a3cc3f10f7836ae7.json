{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/expense/EditExpenseCategory.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { expenseApiEndpoints } from './../../API';\nimport axios from './../../Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet messages;\nconst expenseCategoryValidationSchema = yup.object().shape({\n  category_name: yup.string().required('Category name field is required').max(100, 'Category name must be at most 100 characters')\n});\n\nconst EditExpenseCategory = props => {\n  _s();\n\n  var _errors$category_name;\n\n  useEffect(() => {\n    requestExpenseCategory();\n  }, []);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    setValue\n  } = useForm({\n    validationSchema: expenseCategoryValidationSchema\n  });\n  const [submitting, setSubmitting] = useState(false);\n\n  const requestExpenseCategory = async () => {\n    await axios.get(expenseApiEndpoints.expenseCategory + '/' + props.match.params.category_id, {}).then(response => {\n      // console.log('success', response.data);\n      setValue('category_name', response.data.category_name);\n    }).catch(error => {\n      console.log('error', error.response);\n\n      if (error.response.status === 401) {\n        messages.show({\n          severity: 'error',\n          detail: 'Something went wrong. Try again.',\n          sticky: true,\n          closable: true,\n          life: 5000\n        });\n      }\n    });\n  };\n\n  const submitUpdateExpenseCategory = async data => {\n    await axios.put(expenseApiEndpoints.expenseCategory + '/' + props.match.params.category_id, JSON.stringify(data)).then(response => {\n      console.log('success', response.data.request);\n\n      if (response.status === 200) {\n        setSubmitting(false);\n        messages.show({\n          severity: 'success',\n          detail: 'Your expense category info updated successfully.',\n          sticky: false,\n          closable: false,\n          life: 5000\n        });\n      }\n    }).catch(error => {\n      console.log('error', error);\n      setSubmitting(false);\n      messages.clear();\n\n      if (error.response.status === 422) {\n        let errors = Object.entries(error.response.data).map(([key, value]) => {\n          return {\n            name: key,\n            message: value[0]\n          };\n        });\n        setError(errors);\n      } else if (error.response.status === 401) {\n        messages.show({\n          severity: 'error',\n          detail: 'Something went wrong. Try again.',\n          sticky: true,\n          closable: true,\n          life: 5000\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Edit Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-nogutter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-card-title p-grid p-nogutter p-justify-between\",\n              children: \"Edit Expense Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-card-subtitle\",\n              children: \"Edit selected expense category information below.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(submitUpdateExpenseCategory),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-fluid\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: register,\n                  placeholder: \"Category name\",\n                  name: \"category_name\",\n                  className: \"p-inputtext p-component p-filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-error\",\n                  children: (_errors$category_name = errors.category_name) === null || _errors$category_name === void 0 ? void 0 : _errors$category_name.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: submitting,\n                type: \"submit\",\n                label: \"Save Changes\",\n                icon: \"pi pi-save\",\n                className: \"p-button-raised\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditExpenseCategory, \"NDGyPcXa1ohWDnMosKz9i1yxM2A=\", false, function () {\n  return [useForm];\n});\n\n_c = EditExpenseCategory;\nexport default _c2 = /*#__PURE__*/React.memo(EditExpenseCategory);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditExpenseCategory\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/expense/EditExpenseCategory.jsx"],"names":["React","useState","useEffect","Helmet","useForm","yup","Messages","Card","Button","expenseApiEndpoints","axios","messages","expenseCategoryValidationSchema","object","shape","category_name","string","required","max","EditExpenseCategory","props","requestExpenseCategory","register","handleSubmit","errors","setError","setValue","validationSchema","submitting","setSubmitting","get","expenseCategory","match","params","category_id","then","response","data","catch","error","console","log","status","show","severity","detail","sticky","closable","life","submitUpdateExpenseCategory","put","JSON","stringify","request","clear","Object","entries","map","key","value","name","message","el","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\n\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\n\nimport { expenseApiEndpoints } from './../../API';\nimport axios from './../../Axios';\n\nlet messages;\n\nconst expenseCategoryValidationSchema = yup.object().shape({\n  category_name: yup.string().required('Category name field is required').max(100, 'Category name must be at most 100 characters')\n});\n\nconst EditExpenseCategory = (props) => {\n\n  useEffect(() => {\n    requestExpenseCategory();\n  }, []);\n\n  const { register, handleSubmit, errors, setError, setValue } = useForm({\n    validationSchema: expenseCategoryValidationSchema\n  });\n  const [submitting, setSubmitting] = useState(false);\n\n  const requestExpenseCategory = async () => {\n    await axios.get(expenseApiEndpoints.expenseCategory + '/' + props.match.params.category_id, {})\n      .then(response => {\n        // console.log('success', response.data);\n        setValue('category_name', response.data.category_name);\n      })\n      .catch(error => {\n        console.log('error', error.response);\n\n        if (error.response.status === 401) {\n          messages.show({\n            severity: 'error',\n            detail: 'Something went wrong. Try again.',\n            sticky: true,\n            closable: true,\n            life: 5000\n          });\n        }\n\n      })\n  };\n\n  const submitUpdateExpenseCategory = async (data) => {\n    await axios.put(expenseApiEndpoints.expenseCategory + '/' + props.match.params.category_id, JSON.stringify(data))\n      .then(response => {\n        console.log('success', response.data.request);\n\n        if (response.status === 200) {\n          setSubmitting(false);\n\n          messages.show({\n            severity: 'success',\n            detail: 'Your expense category info updated successfully.',\n            sticky: false,\n            closable: false,\n            life: 5000\n          });\n        }\n\n      })\n      .catch(error => {\n        console.log('error', error);\n\n        setSubmitting(false);\n\n        messages.clear();\n\n        if (error.response.status === 422) {\n          let errors = Object.entries(error.response.data).map(([key, value]) => {\n            return { name: key, message: value[0] }\n          });\n          setError(errors);\n        }\n        else if (error.response.status === 401) {\n          messages.show({\n            severity: 'error',\n            detail: 'Something went wrong. Try again.',\n            sticky: true,\n            closable: true,\n            life: 5000\n          });\n        }\n\n      })\n  };\n\n  return (\n    <div>\n      <Helmet title=\"Edit Expense\" />\n\n      <div className=\"p-grid p-nogutter\">\n        <div className=\"p-col-12\">\n          <div className=\"p-fluid\">\n            <Messages ref={(el) => messages = el} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-grid\">\n\n        <div className=\"p-col-12\">\n          <Card className=\"rounded-border\">\n            <div>\n              <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Edit Expense Category</div>\n              <div className=\"p-card-subtitle\">Edit selected expense category information below.</div>\n            </div>\n            <br />\n            <form onSubmit={handleSubmit(submitUpdateExpenseCategory)}>\n              <div className=\"p-fluid\">\n                <label>Category Name</label>\n                <div className=\"p-fluid\">\n                  <input type=\"text\" ref={register} placeholder=\"Category name\" name=\"category_name\" className=\"p-inputtext p-component p-filled\" />\n                  <p className=\"text-error\">{errors.category_name?.message}</p>\n                </div>\n              </div>\n              <div className=\"p-fluid\">\n                <Button disabled={submitting} type=\"submit\" label=\"Save Changes\" icon=\"pi pi-save\" className=\"p-button-raised\" />\n              </div>\n            </form>\n          </Card>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default React.memo(EditExpenseCategory);\n"]},"metadata":{},"sourceType":"module"}