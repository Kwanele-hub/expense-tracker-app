{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/analytics/Analytics.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Chart } from 'primereact/chart';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { chartApiEndpoints } from './../../API';\nimport axios from './../../Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet messages;\n\nconst Analytics = props => {\n  _s();\n\n  const [incomeExpenseCategoryId, setIncomeExpenseCategoryId] = useState(null);\n  const [incomeExpenseCategories, setIncomeExpenseCategories] = useState([]);\n  const [monthWiseChartData, setMonthWiseChartData] = useState({\n    barChartData: {},\n    barChartDataOptions: {},\n    barChartDataLoading: true\n  });\n  const [categoryWiseChartData, setCategoryWiseChartData] = useState({\n    barChartData: {},\n    barChartDataOptions: {},\n    barChartDataLoading: false\n  });\n  useEffect(() => {\n    requestIncomeExpenseCategories();\n    requestMonthWiseChartData();\n  }, []);\n  useEffect(() => {\n    requestCategoryWiseChartData();\n  }, [incomeExpenseCategoryId]);\n\n  const requestIncomeExpenseCategories = () => {\n    axios.get(chartApiEndpoints.incomeExpenseCategories, {}).then(response => {\n      // console.log(response.data);\n      setIncomeExpenseCategories(response.data);\n    }).catch(error => {\n      // console.log(error);\n      setIncomeExpenseCategories([]);\n    });\n  };\n\n  const requestMonthWiseChartData = () => {\n    axios.get(chartApiEndpoints.incomeExpenseMonthWise, {}).then(response => {\n      // console.log(response.data);\n      setMonthWiseChartData({ ...monthWiseChartData,\n        barChartData: response.data.data.barChartData,\n        barChartDataOptions: response.data.data.options,\n        barChartDataLoading: false\n      });\n    }).catch(error => {\n      // console.log(error);\n      setMonthWiseChartData({ ...monthWiseChartData,\n        barChartDataLoading: false\n      });\n    });\n  };\n\n  const requestCategoryWiseChartData = () => {\n    if (incomeExpenseCategoryId) {\n      setCategoryWiseChartData({ ...categoryWiseChartData,\n        barChartDataLoading: true\n      });\n      axios.get(chartApiEndpoints.incomeExpenseCategoryWise, {\n        params: {\n          category_id: incomeExpenseCategoryId\n        }\n      }).then(response => {\n        // console.log(response.data);\n        setCategoryWiseChartData({ ...categoryWiseChartData,\n          barChartData: response.data.data.barChartData,\n          barChartDataOptions: response.data.data.options,\n          barChartDataLoading: false\n        });\n      }).catch(error => {\n        // console.log(error);\n        setCategoryWiseChartData({ ...categoryWiseChartData,\n          barChartDataLoading: false\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-nogutter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-title p-grid p-nogutter p-justify-between\",\n                children: \"Monthly Income & Expense Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-subtitle\",\n                children: \"Glimpse of your incomes and expenses for a year.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-3\",\n              align: \"right\",\n              children: monthWiseChartData.barChartDataLoading ? /*#__PURE__*/_jsxDEV(ProgressSpinner, {\n                style: {\n                  height: '25px',\n                  width: '25px'\n                },\n                strokeWidth: '4'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 59\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              type: \"bar\",\n              data: monthWiseChartData.barChartData,\n              options: monthWiseChartData.barChartDataOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-title p-grid p-nogutter p-justify-between\",\n                children: \"Category Wise Income & Expense Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-subtitle\",\n                children: \"Glimpse of your incomes and expenses for a category.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-3\",\n              align: \"right\",\n              children: categoryWiseChartData.barChartDataLoading ? /*#__PURE__*/_jsxDEV(ProgressSpinner, {\n                style: {\n                  height: '25px',\n                  width: '25px'\n                },\n                strokeWidth: '4'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 62\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              onChange: e => setIncomeExpenseCategoryId(e.value),\n              value: incomeExpenseCategoryId,\n              itemTemplate: option => {\n                return option.category_name + ' (' + option.category_type + ')';\n              },\n              filter: true,\n              filterBy: \"category_name,category_type\",\n              filterPlaceholder: \"Search here\",\n              showClear: true,\n              filterInputAutoFocus: false,\n              options: incomeExpenseCategories,\n              style: {\n                width: '100%'\n              },\n              placeholder: \"Select an Income Expense Category\",\n              optionLabel: \"category_name\",\n              optionValue: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              type: \"bar\",\n              data: categoryWiseChartData.barChartData,\n              options: categoryWiseChartData.barChartDataOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Analytics, \"WYb5vcnWni6GQkP2CPPesFZXNDg=\");\n\n_c = Analytics;\nexport default _c2 = /*#__PURE__*/React.memo(Analytics);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Analytics\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/analytics/Analytics.jsx"],"names":["React","useState","useEffect","useRef","Helmet","Messages","Card","Chart","Dropdown","ProgressSpinner","chartApiEndpoints","axios","messages","Analytics","props","incomeExpenseCategoryId","setIncomeExpenseCategoryId","incomeExpenseCategories","setIncomeExpenseCategories","monthWiseChartData","setMonthWiseChartData","barChartData","barChartDataOptions","barChartDataLoading","categoryWiseChartData","setCategoryWiseChartData","requestIncomeExpenseCategories","requestMonthWiseChartData","requestCategoryWiseChartData","get","then","response","data","catch","error","incomeExpenseMonthWise","options","incomeExpenseCategoryWise","params","category_id","el","height","width","e","value","option","category_name","category_type","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Chart } from 'primereact/chart';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ProgressSpinner } from 'primereact/progressspinner';\n\nimport { chartApiEndpoints } from './../../API';\nimport axios from './../../Axios';\n\nlet messages;\n\nconst Analytics = (props) => {\n\n  const [incomeExpenseCategoryId, setIncomeExpenseCategoryId] = useState(null)\n  const [incomeExpenseCategories, setIncomeExpenseCategories] = useState([])\n\n  const [monthWiseChartData, setMonthWiseChartData] = useState({\n    barChartData: {},\n    barChartDataOptions: {},\n    barChartDataLoading: true\n  });\n\n  const [categoryWiseChartData, setCategoryWiseChartData] = useState({\n    barChartData: {},\n    barChartDataOptions: {},\n    barChartDataLoading: false\n  });\n\n  useEffect(() => {\n    requestIncomeExpenseCategories();\n    requestMonthWiseChartData();\n  }, []);\n\n  useEffect(() => {\n    requestCategoryWiseChartData();\n  }, [incomeExpenseCategoryId])\n\n  const requestIncomeExpenseCategories = () => {\n    axios.get(chartApiEndpoints.incomeExpenseCategories, {})\n      .then(response => {\n        // console.log(response.data);\n        setIncomeExpenseCategories(response.data);\n      })\n      .catch(error => {\n        // console.log(error);\n        setIncomeExpenseCategories([]);\n      });\n  };\n\n  const requestMonthWiseChartData = () => {\n    axios.get(chartApiEndpoints.incomeExpenseMonthWise, {})\n      .then(response => {\n        // console.log(response.data);\n        setMonthWiseChartData({ ...monthWiseChartData, barChartData: response.data.data.barChartData, barChartDataOptions: response.data.data.options, barChartDataLoading: false });\n      })\n      .catch(error => {\n        // console.log(error);\n        setMonthWiseChartData({ ...monthWiseChartData, barChartDataLoading: false });\n      });\n  };\n\n  const requestCategoryWiseChartData = () => {\n    if (incomeExpenseCategoryId) {\n      setCategoryWiseChartData({ ...categoryWiseChartData, barChartDataLoading: true })\n      axios.get(chartApiEndpoints.incomeExpenseCategoryWise, {\n        params: { category_id: incomeExpenseCategoryId }\n      })\n        .then(response => {\n          // console.log(response.data);\n          setCategoryWiseChartData({ ...categoryWiseChartData, barChartData: response.data.data.barChartData, barChartDataOptions: response.data.data.options, barChartDataLoading: false });\n        })\n        .catch(error => {\n          // console.log(error);\n          setCategoryWiseChartData({ ...categoryWiseChartData, barChartDataLoading: false });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Helmet title=\"Analytics\" />\n\n      <div className=\"p-grid p-nogutter\">\n        <div className=\"p-col-12\">\n          <div className=\"p-fluid\">\n            <Messages ref={(el) => messages = el} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-grid\">\n\n        <div className=\"p-col-12\">\n          <Card className=\"rounded-border\">\n            <div className='p-grid'>\n              <div className='p-col-9'>\n                <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Monthly Income & Expense Chart</div>\n                <div className=\"p-card-subtitle\">Glimpse of your incomes and expenses for a year.</div>\n              </div>\n              <div className=\"p-col-3\" align=\"right\">\n                {monthWiseChartData.barChartDataLoading ? <ProgressSpinner style={{ height: '25px', width: '25px' }} strokeWidth={'4'} /> : ''}\n              </div>\n            </div>\n            <br />\n            <div>\n              <Chart type=\"bar\" data={monthWiseChartData.barChartData} options={monthWiseChartData.barChartDataOptions} />\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"p-col-12\">\n          <Card className=\"rounded-border\">\n            <div className='p-grid'>\n              <div className='p-col-9'>\n                <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Category Wise Income & Expense Chart</div>\n                <div className=\"p-card-subtitle\">Glimpse of your incomes and expenses for a category.</div>\n              </div>\n              <div className=\"p-col-3\" align=\"right\">\n                {categoryWiseChartData.barChartDataLoading ? <ProgressSpinner style={{ height: '25px', width: '25px' }} strokeWidth={'4'} /> : ''}\n              </div>\n            </div>\n            <br />\n            <div>\n              <Dropdown\n                onChange={(e) => setIncomeExpenseCategoryId(e.value)}\n                value={incomeExpenseCategoryId}\n                itemTemplate={option => {\n                  return option.category_name + ' (' + option.category_type + ')';\n                }}\n                filter={true}\n                filterBy=\"category_name,category_type\"\n                filterPlaceholder=\"Search here\"\n                showClear={true}\n                filterInputAutoFocus={false}\n                options={incomeExpenseCategories}\n                style={{ width: '100%' }}\n                placeholder=\"Select an Income Expense Category\"\n                optionLabel=\"category_name\"\n                optionValue=\"id\"\n              />\n            </div>\n            <br />\n            <div>\n              <Chart type=\"bar\" data={categoryWiseChartData.barChartData} options={categoryWiseChartData.barChartDataOptions} />\n            </div>\n          </Card>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default React.memo(Analytics);\n"]},"metadata":{},"sourceType":"module"}