{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/calendar/TransactionCalendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { FullCalendar } from 'primereact/fullcalendar';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Dialog } from 'primereact/dialog';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport ExpenseListItem from './../expense/ExpenseListItem';\nimport { expenseApiEndpoints, reportApiEndpoints, incomeApiEndpoints } from './../../API';\nimport axios from './../../Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet messages;\n\nconst TransactionCalendar = props => {\n  _s();\n\n  const [events, setEvents] = useState({\n    events: [],\n    eventsLoading: true\n  });\n  const [transactionsByDate, setTransactionByDate] = useState({\n    transactions: [],\n    transactionsLoading: true\n  });\n  const [modalVisible, setModalVisible] = useState(false);\n  const eventInfo = useRef({\n    id: null,\n    type: null\n  });\n  useEffect(() => {\n    requestTransaction();\n  }, []);\n  const options = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    defaultView: 'dayGridMonth',\n    themeSystem: 'standard',\n    height: 'auto',\n    titleFormat: {\n      year: 'numeric',\n      month: 'long'\n    },\n    buttonText: {\n      today: 'Today',\n      month: 'Month',\n      week: 'Week',\n      day: 'Day',\n      list: 'List'\n    },\n    header: {\n      left: 'dayGridMonth,listWeek',\n      // timeGridWeek,timeGridDay\n      center: 'title',\n      right: 'today,prev,next' // prevYear,nextYear\n\n    },\n    editable: false,\n    dateClick: info => {// console.log(info);\n      // info.dayEl.style.backgroundColor = '#fcf8e3';\n      // console.log('Clicked on: ' + info.dateStr);\n      // console.log('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);\n      // console.log('Current view: ' + info.view.type);\n    },\n    eventClick: info => {\n      eventInfo.current = {\n        id: `${info.event.id}%`,\n        type: info.event.extendedProps.type\n      };\n      setModalVisible(true);\n    }\n  };\n\n  const renderTransactionDetails = () => {\n    if (transactionsByDate.transactionsLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-grid p-nogutter p-justify-center\",\n        children: /*#__PURE__*/_jsxDEV(ProgressSpinner, {\n          style: {\n            height: '25px'\n          },\n          strokeWidth: '4'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (transactionsByDate.transactions.length > 0) {\n        return transactionsByDate.transactions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ExpenseListItem, {\n            itemDetail: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 18\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid p-nogutter p-justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"color-subtitle\",\n            children: \"Failed to retrieve data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  };\n\n  const requestTransactionDetail = async (transaction_date, transaction_type) => {\n    let api_endpoint = '';\n\n    if (transaction_type === 'Income') {\n      api_endpoint = incomeApiEndpoints.income;\n    } else {\n      api_endpoint = expenseApiEndpoints.expense;\n    }\n\n    await axios.get(api_endpoint + '?per_page=5&sort_order=desc&search_col=transaction_date&search_by=' + transaction_date, {}).then(response => {\n      console.log(response.data);\n      setTransactionByDate({ ...transactionsByDate,\n        transactions: response.data.data,\n        transactionsLoading: false\n      });\n    }).catch(error => {\n      console.log('error', error);\n      setTransactionByDate({ ...transactionsByDate,\n        transactionsLoading: false\n      });\n    });\n  };\n\n  const requestTransaction = () => {\n    axios.get(reportApiEndpoints.transaction, {}).then(response => {\n      // console.log(response.data);\n      if (response.data.transactions.length > 0) {\n        setEvents({ ...events,\n          eventsLoading: false,\n          events: response.data.transactions.map(item => {\n            return item.transaction_type === 'Income' ? {\n              id: item.formatted_date,\n              title: `(+) ${item.total} ${item.currency_name}`,\n              date: item.formatted_date,\n              type: item.transaction_type,\n              backgroundColor: '#55dda9',\n              borderColor: '#55dda9'\n            } : {\n              id: item.formatted_date,\n              title: `(-) ${item.total} ${item.currency_name}`,\n              date: item.formatted_date,\n              type: item.transaction_type,\n              backgroundColor: '#ffb102',\n              borderColor: '#ffb102'\n            };\n          })\n        });\n      } else {\n        setEvents({ ...events,\n          eventsLoading: false\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-nogutter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: \"Transaction Detail\",\n      visible: modalVisible,\n      style: {\n        width: '80%'\n      },\n      modal: true,\n      onShow: () => {\n        requestTransactionDetail(eventInfo.current.id, eventInfo.current.type);\n      },\n      onHide: () => {\n        setTransactionByDate({ ...transactionsByDate,\n          transactions: [],\n          transactionsLoading: true\n        });\n        setModalVisible(false);\n      },\n      dismissableMask: true,\n      children: renderTransactionDetails()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-title p-grid p-nogutter p-justify-between\",\n                children: \"Transactions +/-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-card-subtitle\",\n                children: \"Detail of your daily incomes and expenses.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-6\",\n              align: \"right\",\n              children: events.eventsLoading ? /*#__PURE__*/_jsxDEV(ProgressSpinner, {\n                style: {\n                  height: '25px',\n                  width: '25px'\n                },\n                strokeWidth: '4'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n              events: events.events,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionCalendar, \"mF39dHPADICpiklLGMafG8SsYFI=\");\n\n_c = TransactionCalendar;\nexport default _c2 = /*#__PURE__*/React.memo(TransactionCalendar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TransactionCalendar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/calendar/TransactionCalendar.jsx"],"names":["React","useState","useEffect","useRef","Helmet","Messages","Card","FullCalendar","ProgressSpinner","Dialog","timeGridPlugin","dayGridPlugin","listPlugin","interactionPlugin","ExpenseListItem","expenseApiEndpoints","reportApiEndpoints","incomeApiEndpoints","axios","messages","TransactionCalendar","props","events","setEvents","eventsLoading","transactionsByDate","setTransactionByDate","transactions","transactionsLoading","modalVisible","setModalVisible","eventInfo","id","type","requestTransaction","options","plugins","defaultView","themeSystem","height","titleFormat","year","month","buttonText","today","week","day","list","header","left","center","right","editable","dateClick","info","eventClick","current","event","extendedProps","renderTransactionDetails","length","map","item","index","requestTransactionDetail","transaction_date","transaction_type","api_endpoint","income","expense","get","then","response","console","log","data","catch","error","transaction","formatted_date","title","total","currency_name","date","backgroundColor","borderColor","el","width","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { FullCalendar } from 'primereact/fullcalendar';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Dialog } from 'primereact/dialog';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nimport ExpenseListItem from './../expense/ExpenseListItem';\n\nimport { expenseApiEndpoints, reportApiEndpoints, incomeApiEndpoints } from './../../API';\nimport axios from './../../Axios';\n\nlet messages;\n\nconst TransactionCalendar = (props) => {\n\n  const [events, setEvents] = useState({ events: [], eventsLoading: true });\n  const [transactionsByDate, setTransactionByDate] = useState({ transactions: [], transactionsLoading: true });\n  const [modalVisible, setModalVisible] = useState(false);\n  const eventInfo = useRef({ id: null, type: null });\n\n  useEffect(() => {\n    requestTransaction();\n  }, []);\n\n  const options = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n    defaultView: 'dayGridMonth',\n    themeSystem: 'standard',\n    height: 'auto',\n    titleFormat: { year: 'numeric', month: 'long' },\n    buttonText: {\n      today: 'Today',\n      month: 'Month',\n      week: 'Week',\n      day: 'Day',\n      list: 'List'\n    },\n    header: {\n      left: 'dayGridMonth,listWeek', // timeGridWeek,timeGridDay\n      center: 'title',\n      right: 'today,prev,next' // prevYear,nextYear\n    },\n    editable: false,\n    dateClick: (info) => {\n      // console.log(info);\n      // info.dayEl.style.backgroundColor = '#fcf8e3';\n      // console.log('Clicked on: ' + info.dateStr);\n      // console.log('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);\n      // console.log('Current view: ' + info.view.type);\n    },\n    eventClick: (info) => {\n      eventInfo.current = { id: `${info.event.id}%`, type: info.event.extendedProps.type };\n      setModalVisible(true);\n    },\n  };\n\n  const renderTransactionDetails = () => {\n    if (transactionsByDate.transactionsLoading) {\n      return (\n        <div className=\"p-grid p-nogutter p-justify-center\">\n          <ProgressSpinner style={{ height: '25px' }} strokeWidth={'4'} />\n        </div>\n      );\n    }\n    else {\n      if (transactionsByDate.transactions.length > 0) {\n        return transactionsByDate.transactions.map((item, index) => {\n          return <ExpenseListItem key={item.id} itemDetail={item} />;\n        })\n      }\n      else {\n        return (\n          <div className=\"p-grid p-nogutter p-justify-center\">\n            <h4 className=\"color-subtitle\">Failed to retrieve data.</h4>\n          </div>\n        );\n      }\n    }\n  };\n\n  const requestTransactionDetail = async (transaction_date, transaction_type) => {\n\n    let api_endpoint = '';\n\n    if (transaction_type === 'Income') {\n      api_endpoint = incomeApiEndpoints.income;\n    }\n    else {\n      api_endpoint = expenseApiEndpoints.expense;\n    }\n\n    await axios.get(api_endpoint + '?per_page=5&sort_order=desc&search_col=transaction_date&search_by=' + transaction_date, {})\n      .then(response => {\n        console.log(response.data);\n        setTransactionByDate({\n          ...transactionsByDate,\n          transactions: response.data.data,\n          transactionsLoading: false\n        });\n      })\n      .catch(error => {\n        console.log('error', error);\n        setTransactionByDate({\n          ...transactionsByDate,\n          transactionsLoading: false\n        });\n      });\n  };\n\n  const requestTransaction = () => {\n    axios.get(reportApiEndpoints.transaction, {})\n      .then(response => {\n        // console.log(response.data);\n        if (response.data.transactions.length > 0) {\n          setEvents({\n            ...events,\n            eventsLoading: false,\n            events: response.data.transactions.map(item => {\n              return item.transaction_type === 'Income' ?\n                {\n                  id: item.formatted_date,\n                  title: `(+) ${item.total} ${item.currency_name}`,\n                  date: item.formatted_date,\n                  type: item.transaction_type,\n                  backgroundColor: '#55dda9',\n                  borderColor: '#55dda9',\n                } : {\n                  id: item.formatted_date,\n                  title: `(-) ${item.total} ${item.currency_name}`,\n                  date: item.formatted_date,\n                  type: item.transaction_type,\n                  backgroundColor: '#ffb102',\n                  borderColor: '#ffb102'\n                }\n            })\n          });\n        } else {\n          setEvents({ ...events, eventsLoading: false });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <Helmet title=\"Calendar\" />\n\n      <div className=\"p-grid p-nogutter\">\n        <div className=\"p-col-12\">\n          <div className=\"p-fluid\">\n            <Messages ref={(el) => messages = el} />\n          </div>\n        </div>\n      </div>\n\n      <Dialog\n        header=\"Transaction Detail\"\n        visible={modalVisible}\n        style={{ width: '80%' }}\n        modal={true}\n        onShow={() => {\n          requestTransactionDetail(eventInfo.current.id, eventInfo.current.type);\n        }}\n        onHide={() => {\n          setTransactionByDate({\n            ...transactionsByDate,\n            transactions: [],\n            transactionsLoading: true\n          });\n          setModalVisible(false);\n        }}\n        dismissableMask={true}\n      >\n        {renderTransactionDetails()}\n      </Dialog>\n\n      <div className=\"p-grid\">\n\n        <div className=\"p-col-12\">\n          <Card className=\"rounded-border\">\n            <div className='p-grid'>\n              <div className='p-col-6'>\n                <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Transactions +/-</div>\n                <div className=\"p-card-subtitle\">Detail of your daily incomes and expenses.</div>\n              </div>\n              <div className=\"p-col-6\" align=\"right\">\n                {events.eventsLoading ? <ProgressSpinner style={{ height: '25px', width: '25px' }} strokeWidth={'4'} /> : ''}\n              </div>\n            </div>\n            <br />\n            <div>\n              <FullCalendar events={events.events} options={options} />\n            </div>\n          </Card>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default React.memo(TransactionCalendar);\n"]},"metadata":{},"sourceType":"module"}