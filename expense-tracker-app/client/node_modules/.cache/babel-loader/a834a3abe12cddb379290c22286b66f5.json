{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { createContainer } from 'react-tracked';\nimport { loadState, saveState } from './Helpers';\nconst globalState = {\n  // Declare your global variable and functions here\n  layoutMode: 'static',\n  layoutColorMode: 'dark',\n  currencies: [],\n  currentCurrency: null,\n  user: null\n};\n\nconst useLocalState = () => {\n  _s();\n\n  const [processedState, setProcessedState] = useState(loadState() || globalState);\n  useEffect(() => {\n    saveState(processedState);\n  }, [processedState]);\n  return [processedState, setProcessedState];\n};\n\n_s(useLocalState, \"bm7huRJtBVb1PL1zB8zT1x0QtJY=\");\n\nexport const {\n  Provider,\n  useTracked\n} = createContainer(useLocalState);","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/Store.js"],"names":["useState","useEffect","createContainer","loadState","saveState","globalState","layoutMode","layoutColorMode","currencies","currentCurrency","user","useLocalState","processedState","setProcessedState","Provider","useTracked"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AAEA,MAAMC,WAAW,GAAG;AAClB;AACAC,EAAAA,UAAU,EAAE,QAFM;AAGlBC,EAAAA,eAAe,EAAE,MAHC;AAIlBC,EAAAA,UAAU,EAAE,EAJM;AAKlBC,EAAAA,eAAe,EAAE,IALC;AAMlBC,EAAAA,IAAI,EAAE;AANY,CAApB;;AASA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAEG,SAAS,MAAME,WAAjB,CAApD;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,CAACQ,cAAD,CAAT;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,SAAO,CAACA,cAAD,EAAiBC,iBAAjB,CAAP;AACD,CAND;;GAAMF,a;;AAQN,OAAO,MAAM;AAAEG,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA2Bb,eAAe,CAACS,aAAD,CAAhD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { createContainer } from 'react-tracked';\n\nimport { loadState, saveState } from './Helpers';\n\nconst globalState = {\n  // Declare your global variable and functions here\n  layoutMode: 'static',\n  layoutColorMode: 'dark',\n  currencies: [],\n  currentCurrency: null,\n  user: null\n};\n\nconst useLocalState = () => {\n  const [processedState, setProcessedState] = useState((loadState() || globalState));\n  useEffect(() => {\n    saveState(processedState);\n  }, [processedState]);\n  return [processedState, setProcessedState];\n};\n\nexport const { Provider, useTracked } = createContainer(useLocalState);\n"]},"metadata":{},"sourceType":"module"}