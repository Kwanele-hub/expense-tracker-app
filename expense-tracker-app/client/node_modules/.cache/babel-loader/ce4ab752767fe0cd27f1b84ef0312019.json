{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/income/EditIncome.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as dayjs from 'dayjs';\nimport * as yup from 'yup';\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport CurrencySidebar from './../common/CurrencySidebar';\nimport { incomeApiEndpoints } from './../../API';\nimport axios from './../../Axios';\nimport { useTracked } from './../../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet messages;\nconst editIncomeValidationSchema = yup.object().shape({\n  income_date: yup.string().required('Income date field is required'),\n  category: yup.object().required('Income category field is required'),\n  source: yup.string().required('Spent on field is required').max(100, 'Spent on must be at most 100 characters'),\n  amount: yup.number().required('Income amount field is required'),\n  notes: yup.string().max(200, 'Remarks must be at most 200 characters')\n});\n\nconst EditIncome = props => {\n  _s();\n\n  var _errors$income_date, _errors$category, _errors$source, _errors$amount, _errors$notes;\n\n  const [state, setState] = useTracked();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    setValue,\n    control\n  } = useForm({\n    validationSchema: editIncomeValidationSchema\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [currencyVisible, setCurrencyVisible] = useState(false);\n  const [incomeCategories, setIncomeCategories] = useState([]);\n  useEffect(() => {\n    requestIncomeCategory();\n    requestIncomeInfo();\n  }, []);\n\n  const requestIncomeCategory = async () => {\n    await axios.get(incomeApiEndpoints.incomeCategory, {}).then(response => {\n      // console.log(response.data);\n      if (response.data.data.length > 0) {\n        setIncomeCategories(response.data.data);\n      } else {}\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const requestIncomeInfo = async () => {\n    await axios.get(incomeApiEndpoints.income + '/' + props.match.params.income_id, {}).then(response => {\n      console.log('success', response.data.category);\n      setValue([{\n        id: response.data.id\n      }, {\n        income_date: dayjs(response.data.transaction_date).toDate()\n      }, {\n        category: response.data.category\n      }, {\n        source: response.data.source\n      }, {\n        amount: response.data.amount\n      }, {\n        notes: response.data.remarks\n      }, {\n        currency_id: response.data.currency_id\n      }]);\n      setState(prev => ({ ...prev,\n        currentCurrency: response.data.currency\n      }));\n    }).catch(error => {\n      console.log('error', error.response);\n\n      if (error.response.status === 401) {\n        messages.show({\n          severity: 'error',\n          detail: 'Something went wrong. Try again.',\n          sticky: true,\n          closable: true,\n          life: 5000\n        });\n      }\n    });\n  };\n\n  const submitUpdateIncome = data => {\n    data.income_date = dayjs(data.income_date).format('YYYY-MM-DD HH:mm:ss');\n    data.category_id = data.category.id;\n    data.currency_id = state.currentCurrency.id;\n    console.log(data);\n    axios.put(incomeApiEndpoints.income + '/' + props.match.params.income_id, JSON.stringify(data)).then(response => {\n      console.log('success', response.data.request);\n\n      if (response.status === 200) {\n        setSubmitting(false);\n        messages.show({\n          severity: 'success',\n          detail: 'Your income info updated successfully.',\n          sticky: false,\n          closable: false,\n          life: 5000\n        });\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      setSubmitting(false);\n      messages.clear();\n\n      if (error.response.status === 422) {\n        let errors = Object.entries(error.response.data).map(([key, value]) => {\n          return {\n            name: key,\n            message: value[0]\n          };\n        });\n        setError(errors);\n      } else if (error.response.status === 401) {\n        messages.show({\n          severity: 'error',\n          detail: 'Something went wrong. Try again.',\n          sticky: true,\n          closable: true,\n          life: 5000\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Edit Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencySidebar, {\n      visible: currencyVisible,\n      onHide: e => setCurrencyVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-nogutter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-card-title p-grid p-nogutter p-justify-between\",\n              children: \"Edit Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-card-subtitle\",\n              children: \"Edit selected income information below.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(submitUpdateIncome),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Income Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"income_date\",\n                onChange: ([e]) => {\n                  return e.value;\n                },\n                control: control,\n                as: /*#__PURE__*/_jsxDEV(Calendar, {\n                  dateFormat: \"yy-mm-dd\",\n                  showTime: true,\n                  hourFormat: \"12\",\n                  showButtonBar: true,\n                  touchUI: window.innerWidth < 768\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-error\",\n                children: (_errors$income_date = errors.income_date) === null || _errors$income_date === void 0 ? void 0 : _errors$income_date.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Income Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"category\",\n                onChange: ([e]) => {\n                  return e.value;\n                },\n                control: control,\n                as: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  filter: true,\n                  filterPlaceholder: \"Search here\",\n                  showClear: true,\n                  filterInputAutoFocus: false,\n                  options: incomeCategories,\n                  style: {\n                    width: '100%'\n                  },\n                  placeholder: \"Income Category\",\n                  optionLabel: \"category_name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-error\",\n                children: (_errors$category = errors.category) === null || _errors$category === void 0 ? void 0 : _errors$category.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Income Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: register,\n                name: \"source\",\n                className: \"p-inputtext p-component p-filled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-error\",\n                children: (_errors$source = errors.source) === null || _errors$source === void 0 ? void 0 : _errors$source.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-inputgroup\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: register,\n                  placeholder: \"Amount\",\n                  name: \"amount\",\n                  className: \"p-inputtext p-component p-filled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  label: `${state.currencies.length === 0 ? 'loading' : state.currentCurrency.currency_code}`,\n                  type: \"button\",\n                  onClick: e => setCurrencyVisible(true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-error\",\n                children: (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Income Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: register,\n                rows: 5,\n                placeholder: \"\",\n                name: \"notes\",\n                className: \"p-inputtext p-inputtextarea p-component p-inputtextarea-resizable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-error\",\n                children: (_errors$notes = errors.notes) === null || _errors$notes === void 0 ? void 0 : _errors$notes.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-fluid\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: submitting,\n                type: \"submit\",\n                label: \"Save Changes\",\n                icon: \"pi pi-save\",\n                className: \"p-button-raised\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditIncome, \"yDfA50/lJatB9YUdonyoK5j0ebE=\", false, function () {\n  return [useTracked, useForm];\n});\n\n_c = EditIncome;\nexport default _c2 = /*#__PURE__*/React.memo(EditIncome);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditIncome\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/income/EditIncome.jsx"],"names":["React","useEffect","useState","Helmet","useForm","Controller","dayjs","yup","Messages","Card","Button","Calendar","Dropdown","CurrencySidebar","incomeApiEndpoints","axios","useTracked","messages","editIncomeValidationSchema","object","shape","income_date","string","required","category","source","max","amount","number","notes","EditIncome","props","state","setState","register","handleSubmit","errors","setError","setValue","control","validationSchema","submitting","setSubmitting","currencyVisible","setCurrencyVisible","incomeCategories","setIncomeCategories","requestIncomeCategory","requestIncomeInfo","get","incomeCategory","then","response","data","length","catch","error","console","log","income","match","params","income_id","id","transaction_date","toDate","remarks","currency_id","prev","currentCurrency","currency","status","show","severity","detail","sticky","closable","life","submitUpdateIncome","format","category_id","put","JSON","stringify","request","clear","Object","entries","map","key","value","name","message","e","el","window","innerWidth","width","currencies","currency_code","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as dayjs from 'dayjs';\nimport * as yup from 'yup';\n\nimport { Messages } from 'primereact/messages';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport CurrencySidebar from './../common/CurrencySidebar';\n\nimport { incomeApiEndpoints } from './../../API';\nimport axios from './../../Axios';\nimport { useTracked } from './../../Store';\n\nlet messages;\n\nconst editIncomeValidationSchema = yup.object().shape({\n  income_date: yup.string().required('Income date field is required'),\n  category: yup.object().required('Income category field is required'),\n  source: yup.string().required('Spent on field is required').max(100, 'Spent on must be at most 100 characters'),\n  amount: yup.number().required('Income amount field is required'),\n  notes: yup.string().max(200, 'Remarks must be at most 200 characters'),\n});\n\nconst EditIncome = (props) => {\n\n  const [state, setState] = useTracked();\n  const { register, handleSubmit, errors, setError, setValue, control } = useForm({\n    validationSchema: editIncomeValidationSchema\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [currencyVisible, setCurrencyVisible] = useState(false);\n  const [incomeCategories, setIncomeCategories] = useState([]);\n\n  useEffect(() => {\n    requestIncomeCategory();\n    requestIncomeInfo();\n  }, []);\n\n  const requestIncomeCategory = async () => {\n    await axios.get(incomeApiEndpoints.incomeCategory, {})\n      .then(response => {\n        // console.log(response.data);\n        if (response.data.data.length > 0) {\n          setIncomeCategories(response.data.data);\n        }\n        else {\n\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const requestIncomeInfo = async () => {\n    await axios.get(incomeApiEndpoints.income + '/' + props.match.params.income_id, {})\n      .then(response => {\n        console.log('success', response.data.category);\n        setValue([\n          { id: response.data.id },\n          { income_date: dayjs(response.data.transaction_date).toDate() },\n          { category: response.data.category },\n          { source: response.data.source },\n          { amount: response.data.amount },\n          { notes: response.data.remarks },\n          { currency_id: response.data.currency_id },\n        ]);\n        setState(prev => ({ ...prev, currentCurrency: response.data.currency }));\n      })\n      .catch(error => {\n        console.log('error', error.response);\n\n        if (error.response.status === 401) {\n          messages.show({\n            severity: 'error',\n            detail: 'Something went wrong. Try again.',\n            sticky: true,\n            closable: true,\n            life: 5000\n          });\n        }\n\n      })\n  };\n\n  const submitUpdateIncome = (data) => {\n\n    data.income_date = dayjs(data.income_date).format('YYYY-MM-DD HH:mm:ss');\n    data.category_id = data.category.id;\n    data.currency_id = state.currentCurrency.id;\n\n    console.log(data);\n\n    axios.put(incomeApiEndpoints.income + '/' + props.match.params.income_id, JSON.stringify(data))\n      .then(response => {\n        console.log('success', response.data.request);\n\n        if (response.status === 200) {\n          setSubmitting(false);\n\n          messages.show({\n            severity: 'success',\n            detail: 'Your income info updated successfully.',\n            sticky: false,\n            closable: false,\n            life: 5000\n          });\n        }\n\n      })\n      .catch(error => {\n        console.log('error', error.response);\n\n        setSubmitting(false);\n\n        messages.clear();\n\n        if (error.response.status === 422) {\n          let errors = Object.entries(error.response.data).map(([key, value]) => {\n            return { name: key, message: value[0] }\n          });\n          setError(errors);\n        }\n        else if (error.response.status === 401) {\n          messages.show({\n            severity: 'error',\n            detail: 'Something went wrong. Try again.',\n            sticky: true,\n            closable: true,\n            life: 5000\n          });\n        }\n\n      })\n  };\n\n  return (\n    <div>\n      <Helmet title=\"Edit Income\" />\n\n      <CurrencySidebar visible={currencyVisible} onHide={(e) => setCurrencyVisible(false)} />\n\n      <div className=\"p-grid p-nogutter\">\n        <div className=\"p-col-12\">\n          <div className=\"p-fluid\">\n            <Messages ref={(el) => messages = el} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-grid\">\n\n        <div className=\"p-col-12\">\n          <Card className=\"rounded-border\">\n            <div>\n              <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Edit Income</div>\n              <div className=\"p-card-subtitle\">Edit selected income information below.</div>\n            </div>\n            <br />\n            <form onSubmit={handleSubmit(submitUpdateIncome)}>\n              <div className=\"p-fluid\">\n                <label>Income Date</label>\n                <Controller\n                  name=\"income_date\"\n                  onChange={([e]) => {\n                    return e.value;\n                  }}\n                  control={control}\n                  as={\n                    <Calendar\n                      dateFormat=\"yy-mm-dd\"\n                      showTime={true}\n                      hourFormat=\"12\"\n                      showButtonBar={true}\n                      touchUI={window.innerWidth < 768}\n                    />\n                  }\n                />\n                <p className=\"text-error\">{errors.income_date?.message}</p>\n              </div>\n              <div className=\"p-fluid\">\n                <label>Income Category</label>\n                <Controller\n                  name=\"category\"\n                  onChange={([e]) => {\n                    return e.value\n                  }}\n                  control={control}\n                  as={\n                    <Dropdown\n                      filter={true}\n                      filterPlaceholder=\"Search here\"\n                      showClear={true}\n                      filterInputAutoFocus={false}\n                      options={incomeCategories}\n                      style={{ width: '100%' }}\n                      placeholder=\"Income Category\"\n                      optionLabel=\"category_name\"\n                    />\n                  }\n                />\n                <p className=\"text-error\">{errors.category?.message}</p>\n              </div>\n              <div className=\"p-fluid\">\n                <label>Income Source</label>\n                <input type=\"text\" ref={register} name=\"source\" className=\"p-inputtext p-component p-filled\" />\n                <p className=\"text-error\">{errors.source?.message}</p>\n              </div>\n              <div className=\"p-fluid\">\n                <label>Amount</label>\n                <div className=\"p-inputgroup\">\n                  <input type=\"text\" ref={register} placeholder=\"Amount\" name=\"amount\" className=\"p-inputtext p-component p-filled\" />\n                  <Button\n                    label={`${state.currencies.length === 0 ? 'loading' : state.currentCurrency.currency_code}`}\n                    type=\"button\"\n                    onClick={(e) => setCurrencyVisible(true)} />\n                </div>\n                <p className=\"text-error\">{errors.amount?.message}</p>\n              </div>\n              <div className=\"p-fluid\">\n                <label>Income Notes</label>\n                <textarea ref={register} rows={5} placeholder=\"\" name=\"notes\" className=\"p-inputtext p-inputtextarea p-component p-inputtextarea-resizable\" />\n                <p className=\"text-error\">{errors.notes?.message}</p>\n              </div>\n              <div className=\"p-fluid\">\n                <Button disabled={submitting} type=\"submit\" label=\"Save Changes\" icon=\"pi pi-save\"\n                  className=\"p-button-raised\" />\n              </div>\n            </form>\n          </Card>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default React.memo(EditIncome);\n"]},"metadata":{},"sourceType":"module"}