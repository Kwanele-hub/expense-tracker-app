{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/Routes.jsx\";\nimport React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from './Helpers';\nimport Website from \"./app/landing/Website\";\nimport Login from './app/auth/Login';\nimport Register from './app/auth/Register';\nimport DashboardLayout from './app/layouts/DashboardLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isLoggedIn() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = PrivateRoute;\nexport const GuestRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !isLoggedIn() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/dashboard',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this);\n_c2 = GuestRoute;\n\nconst Routes = () => /*#__PURE__*/_jsxDEV(HashRouter, {\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: '/',\n      component: Website\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuestRoute, {\n      exact: true,\n      path: '/login',\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuestRoute, {\n      exact: true,\n      path: '/register',\n      component: Register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      strict: true,\n      path: '/',\n      component: DashboardLayout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n\n_c3 = Routes;\nexport default _c4 = /*#__PURE__*/React.memo(Routes);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"GuestRoute\");\n$RefreshReg$(_c3, \"Routes\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/Routes.jsx"],"names":["React","HashRouter","Route","Switch","Redirect","isLoggedIn","Website","Login","Register","DashboardLayout","PrivateRoute","component","Component","rest","props","pathname","state","from","location","GuestRoute","Routes","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAC1B,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXT,UAAU,kBACR,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,UADQ,gBAGN,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE,QADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,QADK;KAAMR,Y;AAkBb,OAAO,MAAMS,UAAU,GAAG,CAAC;AAAER,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACxB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACX,CAACT,UAAU,EAAX,gBACE,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,UADF,gBAGI,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE,YADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,QADK;MAAMC,U;;AAkBb,MAAMC,MAAM,GAAG,mBACb,QAAC,UAAD;AAAA,yBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,GAAnB;AAAwB,MAAA,SAAS,EAAEd;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,KAAK,MAAjB;AAAkB,MAAA,IAAI,EAAE,QAAxB;AAAkC,MAAA,SAAS,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,KAAK,MAAjB;AAAkB,MAAA,IAAI,EAAE,WAAxB;AAAqC,MAAA,SAAS,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,YAAD;AAAc,MAAA,MAAM,MAApB;AAAqB,MAAA,IAAI,EAAE,GAA3B;AAAgC,MAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMW,M;AAWN,kCAAepB,KAAK,CAACqB,IAAN,CAAWD,MAAX,CAAf","sourcesContent":["import React from 'react';\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { isLoggedIn } from './Helpers';\n\nimport Website from \"./app/landing/Website\";\nimport Login from './app/auth/Login';\nimport Register from './app/auth/Register';\nimport DashboardLayout from './app/layouts/DashboardLayout';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isLoggedIn() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n    }\n  />\n);\n\nexport const GuestRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isLoggedIn() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: '/dashboard',\n              state: { from: props.location }\n            }}\n          />\n        )\n    }\n  />\n);\n\nconst Routes = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path={'/'} component={Website} />\n      <GuestRoute exact path={'/login'} component={Login} />\n      <GuestRoute exact path={'/register'} component={Register} />\n      <PrivateRoute strict path={'/'} component={DashboardLayout} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default React.memo(Routes);\n"]},"metadata":{},"sourceType":"module"}