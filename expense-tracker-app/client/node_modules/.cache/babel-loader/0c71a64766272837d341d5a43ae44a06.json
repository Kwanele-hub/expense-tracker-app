{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/auth/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { Helmet } from 'react-helmet';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { Messages } from 'primereact/messages';\nimport { Link } from 'react-router-dom';\nimport axios from './../../Axios';\nimport { authApiEndpoints } from './../../API';\nimport LocaleToggle from './../locale/LocaleToggle'; // import i18n from './../../locals/i18n';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerValidationSchema = yup.object().shape({\n  name: yup.string().required('Name field is required').min(4, 'Name must be at most 4 character'),\n  email: yup.string().required('Email field is required').email('Email must be a valid email'),\n  password: yup.string().required('Password field is required').min(6, 'Password must be at most 6 character'),\n  confirm_password: yup.string().required('Password confirm field is required').oneOf([yup.ref('password')], 'Confirm password does not match')\n});\nlet messages; // For alert message\n\nconst Register = props => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$confirm_passw;\n\n  const [submitting, setSubmitting] = useState(false); // console.log('Register', props);\n  // Login form handle\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    reset\n  } = useForm({\n    validationSchema: registerValidationSchema\n  });\n\n  const submitRegister = data => {\n    setSubmitting(true);\n    axios.post(authApiEndpoints.register, JSON.stringify(data)).then(response => {\n      console.log('response', response.data);\n\n      if (response.status === 201) {\n        messages.clear();\n        messages.show({\n          severity: 'success',\n          detail: 'Registration successful. Go to login.',\n          sticky: true\n        });\n        reset();\n        setSubmitting(false);\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n\n      if (error.response.status === 422) {\n        // Set validation errors returned from backend\n        let errors = Object.entries(error.response.data).map(([key, value]) => {\n          return {\n            name: key,\n            message: value[0]\n          };\n        });\n        setError(errors);\n      } else {\n        messages.show({\n          severity: 'error',\n          detail: 'Something went wrong. Try again.',\n          sticky: true\n        });\n      }\n\n      setSubmitting(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-nogutter p-align-center p-justify-center\",\n      style: {\n        height: '95vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-sm-12 p-md-6 p-lg-4\",\n        style: {\n          borderRadius: 5,\n          minHeight: 65\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12 p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-card-title p-grid p-nogutter p-justify-between\",\n            children: [\"Register\", /*#__PURE__*/_jsxDEV(LocaleToggle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-card-subtitle\",\n            children: \"Enter your info to register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submitRegister),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-inputgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-inputgroup-addon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"pi pi-user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: 'Name',\n                ref: register,\n                className: \"p-inputtext p-component p-filled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-inputgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-inputgroup-addon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"pi pi-envelope\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                placeholder: 'Email',\n                ref: register,\n                className: \"p-inputtext p-component p-filled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-inputgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-inputgroup-addon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"pi pi-key\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: 'Password',\n                ref: register,\n                className: \"p-inputtext p-component p-filled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-inputgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-inputgroup-addon\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"pi pi-key\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirm_password\",\n                placeholder: 'Confirm Password',\n                ref: register,\n                className: \"p-inputtext p-component p-filled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: (_errors$confirm_passw = errors.confirm_password) === null || _errors$confirm_passw === void 0 ? void 0 : _errors$confirm_passw.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-fluid\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: submitting,\n              type: \"submit\",\n              label: 'Register',\n              icon: \"pi pi-sign-in\",\n              className: \"p-button-raised\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid p-nogutter p-col-12 p-justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"i/0d0rpImMpaWFKZoDDua1BUF4M=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default _c2 = /*#__PURE__*/React.memo(Register);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/auth/Register.jsx"],"names":["React","useState","useForm","yup","Helmet","Card","Button","Messages","Link","axios","authApiEndpoints","LocaleToggle","registerValidationSchema","object","shape","name","string","required","min","email","password","confirm_password","oneOf","ref","messages","Register","props","submitting","setSubmitting","register","handleSubmit","errors","setError","reset","validationSchema","submitRegister","data","post","JSON","stringify","then","response","console","log","status","clear","show","severity","detail","sticky","catch","error","Object","entries","map","key","value","message","height","borderRadius","minHeight","el","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\n\nimport { Helmet } from 'react-helmet';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { Messages } from 'primereact/messages';\nimport { Link } from 'react-router-dom';\n\nimport axios from './../../Axios';\nimport { authApiEndpoints } from './../../API';\n\nimport LocaleToggle from './../locale/LocaleToggle';\n// import i18n from './../../locals/i18n';\n\nconst registerValidationSchema = yup.object().shape({\n  name: yup.string().required('Name field is required').min(4, 'Name must be at most 4 character'),\n  email: yup.string().required('Email field is required').email('Email must be a valid email'),\n  password: yup.string().required('Password field is required').min(6, 'Password must be at most 6 character'),\n  confirm_password: yup.string().required('Password confirm field is required').oneOf([yup.ref('password')], 'Confirm password does not match')\n});\n\nlet messages;  // For alert message\n\nconst Register = (props) => {\n\n  const [submitting, setSubmitting] = useState(false);\n\n  // console.log('Register', props);\n\n  // Login form handle\n  const { register, handleSubmit, errors, setError, reset } = useForm({\n    validationSchema: registerValidationSchema\n  });\n\n  const submitRegister = (data) => {\n    setSubmitting(true);\n    axios.post(authApiEndpoints.register, JSON.stringify(data))\n      .then(response => {\n        console.log('response', response.data);\n\n        if (response.status === 201) {\n          messages.clear();\n          messages.show({ severity: 'success', detail: 'Registration successful. Go to login.', sticky: true });\n          reset();\n          setSubmitting(false);\n        }\n\n      })\n      .catch(error => {\n        console.log('error', error.response);\n\n        if (error.response.status === 422) {\n          // Set validation errors returned from backend\n          let errors = Object.entries(error.response.data).map(([key, value]) => {\n            return { name: key, message: value[0] }\n          });\n          setError(errors);\n        }\n        else {\n          messages.show({ severity: 'error', detail: 'Something went wrong. Try again.', sticky: true });\n        }\n\n        setSubmitting(false);\n\n      })\n  };\n\n  return (\n    <div>\n      <Helmet title='Register' />\n      <div className=\"p-grid p-nogutter p-align-center p-justify-center\" style={{ height: '95vh' }}>\n        <Card className=\"p-sm-12 p-md-6 p-lg-4\" style={{ borderRadius: 5, minHeight: 65 }}>\n          <div className=\"p-col-12 p-fluid\">\n            <Messages ref={(el) => messages = el} />\n          </div>\n          <div className=\"p-col-12\">\n            <div className=\"p-card-title p-grid p-nogutter p-justify-between\">Register\n              <LocaleToggle />\n            </div>\n            <div className=\"p-card-subtitle\">Enter your info to register</div>\n          </div>\n\n          <form onSubmit={handleSubmit(submitRegister)}>\n            <div className=\"p-col-12 p-fluid\">\n              <div className=\"p-inputgroup\">\n                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\" /></span>\n                <input type=\"text\" name=\"name\" placeholder={'Name'} ref={register} className=\"p-inputtext p-component p-filled\" />\n              </div>\n              <p className=\"text-error\">{errors.name?.message}</p>\n            </div>\n            <div className=\"p-col-12 p-fluid\">\n              <div className=\"p-inputgroup\">\n                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-envelope\" /></span>\n                <input type=\"text\" name=\"email\" placeholder={'Email'} ref={register} className=\"p-inputtext p-component p-filled\" />\n              </div>\n              <p className=\"text-error\">{errors.email?.message}</p>\n            </div>\n            <div className=\"p-col-12 p-fluid\">\n              <div className=\"p-inputgroup\">\n                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-key\" /></span>\n                <input type=\"password\" name=\"password\" placeholder={'Password'} ref={register} className=\"p-inputtext p-component p-filled\" />\n              </div>\n              <p className=\"text-error\">{errors.password?.message}</p>\n            </div>\n            <div className=\"p-col-12 p-fluid\">\n              <div className=\"p-inputgroup\">\n                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-key\" /></span>\n                <input type=\"password\" name=\"confirm_password\" placeholder={'Confirm Password'} ref={register} className=\"p-inputtext p-component p-filled\" />\n              </div>\n              <p className=\"text-error\">{errors.confirm_password?.message}</p>\n            </div>\n            <div className=\"p-col-12 p-fluid\">\n              <Button disabled={submitting} type=\"submit\" label={'Register'} icon=\"pi pi-sign-in\" className=\"p-button-raised\" />\n            </div>\n            <div className=\"p-grid p-nogutter p-col-12 p-justify-center\">\n              <Link to=\"/login\">Login</Link>\n            </div>\n          </form>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Register);\n"]},"metadata":{},"sourceType":"module"}