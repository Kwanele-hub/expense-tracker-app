{"ast":null,"code":"var _jsxFileName = \"/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/common/calculator/Calculator.js\";\nimport React, { Component } from 'react';\nimport PointTarget from 'react-point';\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AutoScalingText extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scale: 1\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      scale\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-scaling-text\",\n      style: {\n        transform: `scale(${scale},${scale})`\n      },\n      ref: node => this.node = node,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const {\n      value,\n      ...props\n    } = this.props;\n    const language = navigator.language || 'en-US';\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }); // Add back missing .0 in e.g. 12.0\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n      className: \"calculator-display\",\n      children: /*#__PURE__*/_jsxDEV(AutoScalingText, {\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const {\n      onPress,\n      className,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(PointTarget, {\n      onPoint: onPress,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `calculator-key ${className}`,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst CalculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n};\n\nclass Calculator extends Component {\n  constructor() {\n    super();\n\n    this.handleKeyDown = event => {\n      let {\n        key\n      } = event;\n      if (key === 'Enter') key = '=';\n\n      if (/\\d/.test(key)) {\n        event.preventDefault();\n        this.inputDigit(parseInt(key, 10));\n      } else if (key in CalculatorOperations) {\n        event.preventDefault();\n        this.performOperation(key);\n      } else if (key === '.') {\n        event.preventDefault();\n        this.inputDot();\n      } else if (key === '%') {\n        event.preventDefault();\n        this.inputPercent();\n      } else if (key === 'Backspace') {\n        event.preventDefault();\n        this.clearLastChar();\n      } else if (key === 'Clear') {\n        event.preventDefault();\n\n        if (this.state.displayValue !== '0') {\n          this.clearDisplay();\n        } else {\n          this.clearAll();\n        }\n      }\n    };\n\n    this.state = {\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false,\n      eventListenerAdded: false\n    };\n  }\n\n  componentDidMount() {\n    // console.log('keydown listener added');\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('keydown listener removed');\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: '0'\n    });\n  }\n\n  clearLastChar() {\n    const {\n      displayValue\n    } = this.state;\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || '0'\n    });\n  }\n\n  toggleSign() {\n    const {\n      displayValue\n    } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n    this.setState({\n      displayValue: String(newValue)\n    });\n  }\n\n  inputPercent() {\n    const {\n      displayValue\n    } = this.state;\n    const currentValue = parseFloat(displayValue);\n    if (currentValue === 0) return;\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, '');\n    const newValue = parseFloat(displayValue) / 100;\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    });\n  }\n\n  inputDot() {\n    const {\n      displayValue\n    } = this.state;\n\n    if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + '.',\n        waitingForOperand: false\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const {\n      displayValue,\n      waitingForOperand\n    } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      });\n    } else {\n      this.setState({\n        displayValue: displayValue === '0' ? String(digit) : displayValue + digit\n      });\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator\n    } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      });\n    } else if (operator) {\n      const currentValue = value || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    });\n  }\n\n  render() {\n    const {\n      displayValue\n    } = this.state;\n    const clearDisplay = displayValue !== '0';\n    const clearText = clearDisplay ? 'C' : 'AC';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(CalculatorDisplay, {\n        value: displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-keypad\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-keys\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"function-keys\",\n            children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-clear\",\n              onPress: () => clearDisplay ? this.clearDisplay() : this.clearAll(),\n              children: clearText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-sign\",\n              onPress: () => this.toggleSign(),\n              children: \"\\xB1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-percent\",\n              onPress: () => this.inputPercent(),\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-keys\",\n            children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-0\",\n              onPress: () => this.inputDigit(0),\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-dot\",\n              onPress: () => this.inputDot(),\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-1\",\n              onPress: () => this.inputDigit(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-2\",\n              onPress: () => this.inputDigit(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-3\",\n              onPress: () => this.inputDigit(3),\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-4\",\n              onPress: () => this.inputDigit(4),\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-5\",\n              onPress: () => this.inputDigit(5),\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-6\",\n              onPress: () => this.inputDigit(6),\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-7\",\n              onPress: () => this.inputDigit(7),\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-8\",\n              onPress: () => this.inputDigit(8),\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n              className: \"key-9\",\n              onPress: () => this.inputDigit(9),\n              children: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operator-keys\",\n          children: [/*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-divide\",\n            onPress: () => this.performOperation('/'),\n            children: \"\\xF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-multiply\",\n            onPress: () => this.performOperation('*'),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-subtract\",\n            onPress: () => this.performOperation('-'),\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-add\",\n            onPress: () => this.performOperation('+'),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalculatorKey, {\n            className: \"key-equals\",\n            onPress: () => this.performOperation('='),\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/home/tcg/my-workspace/Team-Serengetti/expense-tracker-app/client/src/app/common/calculator/Calculator.js"],"names":["React","Component","PointTarget","AutoScalingText","state","scale","componentDidUpdate","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","transform","props","children","CalculatorDisplay","value","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","CalculatorKey","onPress","className","CalculatorOperations","prevValue","nextValue","Calculator","constructor","handleKeyDown","event","key","preventDefault","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","displayValue","clearDisplay","clearAll","operator","waitingForOperand","eventListenerAdded","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","substring","length","toggleSign","newValue","String","currentValue","fixedDigits","replace","toFixed","digit","nextOperator","inputValue","clearText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PointTarget from 'react-point';\n\nimport './calculator.css';\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1\n  };\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n\n    const node = this.node;\n    const parentNode = node.parentNode;\n\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale)\n      return;\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale })\n    } else if (scale < 1) {\n      this.setState({ scale: 1 })\n    }\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={node => this.node = node}\n      >{this.props.children}</div>\n    )\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { value, ...props } = this.props;\n\n    const language = navigator.language || 'en-US';\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    });\n\n    // Add back missing .0 in e.g. 12.0\n    const match = value.match(/\\.\\d*?(0*)$/);\n\n    if (match)\n      formattedValue += (/[1-9]/).test(match[0]) ? match[1] : match[0];\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    )\n  }\n}\n\nclass CalculatorKey extends Component {\n  render() {\n    const { onPress, className, ...props } = this.props;\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    )\n  }\n}\n\nconst CalculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n};\n\nclass Calculator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false,\n      eventListenerAdded: false\n    };\n  }\n\n  componentDidMount() {\n    // console.log('keydown listener added');\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('keydown listener removed');\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    })\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: '0'\n    })\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state;\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || '0'\n    })\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n\n    this.setState({\n      displayValue: String(newValue)\n    })\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state;\n    const currentValue = parseFloat(displayValue);\n\n    if (currentValue === 0)\n      return;\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, '');\n    const newValue = parseFloat(displayValue) / 100;\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    })\n  }\n\n  inputDot() {\n    const { displayValue } = this.state;\n\n    if (!(/\\./).test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + '.',\n        waitingForOperand: false\n      })\n    }\n  }\n\n  inputDigit(digit) {\n    const { displayValue, waitingForOperand } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      })\n    } else {\n      this.setState({\n        displayValue: displayValue === '0' ? String(digit) : displayValue + digit\n      })\n    }\n  }\n\n  performOperation(nextOperator) {\n    const { value, displayValue, operator } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      })\n    } else if (operator) {\n      const currentValue = value || 0;\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      })\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    })\n  }\n\n  handleKeyDown = (event) => {\n    let { key } = event;\n\n    if (key === 'Enter')\n      key = '=';\n\n    if ((/\\d/).test(key)) {\n      event.preventDefault();\n      this.inputDigit(parseInt(key, 10))\n    } else if (key in CalculatorOperations) {\n      event.preventDefault();\n      this.performOperation(key)\n    } else if (key === '.') {\n      event.preventDefault();\n      this.inputDot()\n    } else if (key === '%') {\n      event.preventDefault();\n      this.inputPercent()\n    } else if (key === 'Backspace') {\n      event.preventDefault();\n      this.clearLastChar()\n    } else if (key === 'Clear') {\n      event.preventDefault();\n\n      if (this.state.displayValue !== '0') {\n        this.clearDisplay()\n      } else {\n        this.clearAll()\n      }\n    }\n  };\n\n  render() {\n    const { displayValue } = this.state;\n\n    const clearDisplay = displayValue !== '0';\n    const clearText = clearDisplay ? 'C' : 'AC';\n\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay value={displayValue} />\n        <div className=\"calculator-keypad\">\n          <div className=\"input-keys\">\n            <div className=\"function-keys\">\n              <CalculatorKey className=\"key-clear\"\n                onPress={() => clearDisplay ? this.clearDisplay() : this.clearAll()}>{clearText}</CalculatorKey>\n              <CalculatorKey className=\"key-sign\" onPress={() => this.toggleSign()}>±</CalculatorKey>\n              <CalculatorKey className=\"key-percent\" onPress={() => this.inputPercent()}>%</CalculatorKey>\n            </div>\n            <div className=\"digit-keys\">\n              <CalculatorKey className=\"key-0\" onPress={() => this.inputDigit(0)}>0</CalculatorKey>\n              <CalculatorKey className=\"key-dot\" onPress={() => this.inputDot()}>●</CalculatorKey>\n              <CalculatorKey className=\"key-1\" onPress={() => this.inputDigit(1)}>1</CalculatorKey>\n              <CalculatorKey className=\"key-2\" onPress={() => this.inputDigit(2)}>2</CalculatorKey>\n              <CalculatorKey className=\"key-3\" onPress={() => this.inputDigit(3)}>3</CalculatorKey>\n              <CalculatorKey className=\"key-4\" onPress={() => this.inputDigit(4)}>4</CalculatorKey>\n              <CalculatorKey className=\"key-5\" onPress={() => this.inputDigit(5)}>5</CalculatorKey>\n              <CalculatorKey className=\"key-6\" onPress={() => this.inputDigit(6)}>6</CalculatorKey>\n              <CalculatorKey className=\"key-7\" onPress={() => this.inputDigit(7)}>7</CalculatorKey>\n              <CalculatorKey className=\"key-8\" onPress={() => this.inputDigit(8)}>8</CalculatorKey>\n              <CalculatorKey className=\"key-9\" onPress={() => this.inputDigit(9)}>9</CalculatorKey>\n            </div>\n          </div>\n          <div className=\"operator-keys\">\n            <CalculatorKey className=\"key-divide\" onPress={() => this.performOperation('/')}>÷</CalculatorKey>\n            <CalculatorKey className=\"key-multiply\" onPress={() => this.performOperation('*')}>×</CalculatorKey>\n            <CalculatorKey className=\"key-subtract\" onPress={() => this.performOperation('-')}>−</CalculatorKey>\n            <CalculatorKey className=\"key-add\" onPress={() => this.performOperation('+')}>+</CalculatorKey>\n            <CalculatorKey className=\"key-equals\" onPress={() => this.performOperation('=')}>=</CalculatorKey>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}